Az önce gördüğümüz komutların herhangi birinde bir sıkıntı, bir açık var mı onu bulmamız gerekiyor.
Bunu bulabilmek için tek tek bu komutları test etmemiz gerekiyor. 
Bunun için spiking denilen yöntem var. Karşı tarafa yani sunucuya birçok değişken, birçok farklı girdi yolluyoruz  ve bir yerde stack overflow, buffer overflow oluyor mu, herhangi bir şekilde çökertebiliyor muyuz, bir hata aldırabiliyor muyuz bunu görmeye çalışıyoruz.
Yani öncelikler programı çökertebiliyor muyuz ona bakarız çünkü çökertebiliyorsak bir hata vardır, o hata da bizi EIP'ye ulaştıracak ve shell code yazabilecek bir yere götürür mü tek tek bakmamız gerekiyor.
Öncelikle bir hata var mı onu bulmamız gerekiyor.

Kendi python kodumuzu yazacağız. Özellikle detay, önemli işlerde kendi python kodlarımızla çalışacağız ama Kali Linux içerisinde gelen hazır bir araç var. Bu aracın adı: generic_send_tcp
Terminale generic_send_tcp yazarsan nasıl kullanılacağını gösterir.
 
./generic_send_tcp host(ip) port spike_script 2değişken   bunları yazman gerekir.
2 değişken (SKIPVAR ve SKIPSTR) : çok uzun sürecek bir script yazıyorsak bir yerde pause edip sonradan oraya geri dönmek için kullandığımız değişkenler. Kullanmak istemiyorsak 0 0 yazıp geçebiliyoruz.



SPIKE SCRIPT
-----------
s_readline();  ---> Okuduğumuz, işleme başlattığımız satır
s_string("TRUN ");   ---> Deneyeceğimiz komut
s_string_variable("a");   ---> Yollanacak değişken



***Kali'nin içerisinde bir sürü spike kodu var. Bazıları çok karışık, bazıları kendi sunucu tipine göre hazırlanmış ve o sunucuyu çökertebiliyor muyuz onu denemeye yönelik birçok değişken, karakter, sayı yollayan çok basit scriptler.

locate spike   diye aratırsan spike'ın olduğu yerleri görürsün.
spike klasörüne gidersin.
İçerisindeki audits klasörüne gidersin ve farklı server tipleri görürsün.
SMTP serverına (mail serverı) girersin.
SMTP sunucularına saldırmak için, onları bozabiliyor muyuz görmek için bazı spikelar vardır.
Bir tanesinin içeriğine bakalım:

cat smtp1.spk
SANA KODLARINI GÖSTERİR.
KODDA FARKLI FARKLI ŞEYLER YOLLAYIP DENEDİĞİNİ GÖRÜRSÜN.
BİZİM YAPACAĞIMIZ İŞLEM DE BU.


Downloads klasörüne Spike diye bir klasör açarız. 
Terminalde bu klasörün içine girip:
nano myspike.spk 
komutunu çalıştırırız.
Böyle dosya olmadığı için enter'a bastığımızda nano projesi getirir.
İçerisine istediğimiz scripti yazarız.
Spike için ayrı dil öğrenmeye gerek yok, yazacağımız kodlar basit.



s_readline(); 
s_string("STATS "); 
s_string_variable("A");   ---> Ne yazdığımız çok fark etmez.
                               send tcp olayı bizim için devamlı bir şey yollayacak ve çöküp çökmediğini test edecek
ctrl+o yapıp kaydederiz.
enter'a basarız.
ctrl+x ile çıkarız.

ARTIK ÇALIŞTIRABİLİRİZ:

generic_send_tcp 10.0.2.15 9999 myspike.spk 0 0

diyince istekler yollar.
Windows'ta immunity debugger'a bakarız. Sağ altta Running yazıyor olmalı (Oynat tuşuna bastığın için.).
vulnserver.exe ekranında devamlı connectionlar gelir. Bir sıkıntı yok, server çökmedi. Bağlantılar geliyor, cevap veriyor. 
Immunity Debugger'da da sorun yok. Çökme olsa çökme olduğunu gösteren bir şey olur.


nc -nv 10.0.2.15 9999 yazdığında HELP ile çıkan komutları tek tek test ettiğinde TRUN olanda gerçekten de bir çökme yaşanabiliyor ve TRUN'da bir sıkıntı olduğunu anlayacağız. TRUN'ı denediğinde nerede sıkıntı olduğunu bulursun.


Yine terminalde Spike klasörüne gidersin.
Yine nano myspike.spk diyip çalıştırırsın ve yazdığın kodlar açılır.
Buradan STATS'ı TRUN olarak değiştirirsin ve kaydedersin.

generic_send_tcp 10.0.2.15 9999 myspike.spk 0 0

Komutunu çalıştırıp Immunity Debugger'a gelecek olursan çöktüğünü görürsün ve vulnerserver.exe yani server kitlenir.
Kali de yollayamaz duruma gelir çünkü zaten sunucu çöktü. ctrl+c ile oradan da çıkarız.

Çökerttiğimiz yere bakacak olursak ESP EIP EBP gibi yerlerde "AAAAAAAAAAAAAAA..." gibi değerler görürüz.
Bu diğer taraftan yolladığımız değerler.
Bunu (ESP) TRUN ile overflow etmeyi başarmışız. EBP ve EIP'nin içerisine (41414141 (41 A'ya denk gelir)) taşmış.

Sağ alta bakarsan hexadecimal kısmında 41414141, text kısmında AAAA görürsün. Yani bütün stack'i A ile doldurmayı ve EIP'ye kadar gelmeyi başarmışız.

ŞUNU ANLADIK
------------
TRUN diye bir komut var.
Bu doğru düzgün yazılmamış, çökertebiliyor.
Ne zaman çökertiyor, ne kadarda çökertiyor, tam olarak kaç karakter civarı çökertiyor bunları anlamamız lazım ki tam olarak kaç karakterde EIP'ye geliriz onu bulmamız lazım ve EIP içerisine şuraya git şuradaki kodu çalıştır gibi komut yazdırabilelim.

































