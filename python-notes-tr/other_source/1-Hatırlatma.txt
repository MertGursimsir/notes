a="safvcsfd"
"s" in a
|
True



x, y, z = -2, 1.5, "Merhaba Dünya"
x,y,z
(-2, 1.5, 'Merhaba Dünya')


(x, y, z) = (-1.25, 42, "Merhaba")   -----> Bu     x, y, z = -1.25, 42, "Merhaba"    þeklinde de yazýlabilir. --->tuple
x--->-1.25 
.
.
.





Tanýmladýðýmýz bir deðiþkeni del komutuyla bellekten silebiliriz.
x=1
del x
print(x) ---> Error




del liste[2]----> listeden de silebiliriz
del d["isim"]----> sözlükten de silebiliriz






***Key olarak yalnýzca deðiþtirilemez tipler (sayý, string, tuple) kullanýlýr. Listeler kullanýlamaz.





complex(a,b) ---> a+bj
1 + 4 + 0j  --->(5+0j)







"hello" == "Hello", "hello" > "Hello", "hello" < "jello"
(False, True, True)
ALFABETÝK SIRA







d = {"abc": 54, (1,2): -45.1}                 SADECE
"abc" in d, 54 in d, (1,2) in d               KEYLERE
(True, False, True)                           BAKAR






[] = {} = "" = None = 0 = 0.0 = False
Tersine olarak da, sýfýrdan farklý her sayý veya boþ olmayan herhangi bir liste/çokuz/dize/sözlük if yapýlarýnda mantýksal doðru olarak yorumlanýrlar.




Boole ifadelerinde ikiden fazla bileþen de kullanýlabilir. Önce not iþlemi, sonra and iþlemi, sonra da or iþlemi yapýlýr. Ayný iþlem yapýlýyorsa, bileþenler soldan saða çifter çifter alýnýr.
1 == 2 or 3 > 4 or 5 < 8
True



"abc" or print("mrb")
'abc'

False or print("mrb")
'mrb'



Eðer X mantýksal olarak yanlýþsa, Y ne olursa olsun bütün ifade yanlýþ olur, böylece X deðeri geri verilir. Ama X doðruysa, iþlemin doðruluk deðeri Y‘ye baðlýdýr, ve Y deðeri geri verilir.

2 and 3
3

0 and 2
0




X = A or B or C or None
|
ÝKÝSÝ AYNI
|
if A:
    X = A
elif B:
    X = B
elif C:
    X = C
else:
    X = None



********************************************************************************
if x:
    a = y
else:
    a = z
|
ÝKÝSÝ AYNI
|
a = y if x else z




hedef = "42"
tahmin = input("Tahmininiz: ")
if tahmin == hedef:
    print("Doðru!")
|
ÝKÝSÝ AYNI
|
hedef = "42"
x = input("Tahmininiz: ")
print("Doðru!" if x == hedef else "Yanlýþ")





if rating > 100:
    sinif = "A"
elif rating > 50:
    sinif = "B"
else:
    sinif = "C"
|
ÝKÝSÝ AYNI
|
sinif = "A" if rating > 100 else "B" if rating > 50 else "C"
********************************************************************************



a=1
b=10
while a<b:                  ------> 1 2 3 4 5 6 7 8 9 
    print(a, end=" ")
    a += 1
*!* end=" "  yazdýðýmýz için tek sýrada yazdý. Týrnak içinde boþluk býrakmasak: 123456789




Döngü bloku üzerinden her bir geçiþe bir iterasyon deriz!!!








while <þart>:
    <komutlar 1>
else:
    <komutlar 2>
<komutlar 1> kýsmýnda bir break komutu çalýþtýrýlýrsa, döngünün else kýsmýný da atlar.
döngü break ile bitmediði zaman else kýsmý da çalýþýr.









chaos=[[1,2],[3,4],[5,6]]
b=[tek for köþeli in chaos for tek in köþeli]
b --s+e--> [1,2,3,4,5,6]








def my_func(*args):
    print(args)






def control_string(string):
    return "Metallica" in string

control_string("Metallicadkfjskj")
True






***def multiply(number):return number*3 ---> Fonksiyon bu þekilde tek satýrda da yazýlabilir.

multiply=lambda number:number*3

multiply(5)
15







globalde yazýlan bir variable fonksiyonda ayný isimle variable oluþtursan da deðiþmez!
ANCAAKK
y=10
def func_2():
    global y
    y=5
    print(y)

func_2() ---s+e---> 5

y ---s+e---> 5







def decorator_function(func):
    def wrapper_function():
        print("wrapper started")
        func()
        print("wrapper stopped")
    return wrapper_function

def func_new():
    print("hello world")

decorater_function(func_new)() ---s+e---> wrapper started     YA DA  return wrapper_function()  YA DA   example_function = decorator_function(func_new)
                                          hello world                yazsaydýn ekstradan ()             
                                          wrapper stopped            bunlara gerek kalmazdý.            example_function() --s+e--> wrapper started
                                                                                                                                    hello world
                                                                                                                                    wrapper stopped



@decorator_function
def func_new():
    print("hello world")

func_new() ---s+e---> wrapper started
                      hello world
                      wrapper stopped
