Bir sözlük sýralý nesne deðildir, çünkü {"ahmet":123, "ayþe":456} ile {"ayþe":456, "ahmet":123} ayný sözlüðü tanýmlarlar.

L = [3,4,5,6,7,8]
print( L[len(L)-1] )  # sonuncu eleman                         = print( L[-1] )
print( L[len(L)-2] )  # sondan bir önceki eleman               = print( L[-2] ) 
|
8
7



L[:]   # baþtan sona dilim. Listenin bir kopyasýný çýkarmakta kullanýlabilir.
|
[3, 4, 5, 6, 7, 8]


L[2:5]=[-1,-2,-3]
L
|
[3, 4, -1, -2, -3, 8]




t = (3,4,5,6,7,8)
t = t[:2] + (-1,-2,-3) + t[5:]
t
|
(3, 4, -1, -2, -3, 8)



s = "abcçdefgð"
s = s[:2] + "XYZ" + s[5:]
s
|
'abXYZefgð'


range bir fonksiyon deðil, bir veri tipi döndürür. Onu bir listeye çevirmek için ayrýca list iþlemi gerekir.
range iþlemi bir liste deðil, dizinin baþlangýç, bitiþ ve adým bilgilerini barýndýran bir nesne geri verir sadece. Bu sayede, range(1000000) gibi çok uzun görünen bir dizi bile bellekte ancak range(10) kadar yer kaplar. Elemanlar ve alt aralýklar gerektiðinde aritmetik olarak hesaplanýr.




11 in range(0,20,2)
|
False




range(0,20,2)[:5]
|
range(0, 10, 2)






len({"a": 45, "b": 5.4})
|
2





L = [1,2,3,4,5,6]
del L[1]   # ikinci elemaný siler
L
|
[1, 3, 4, 5, 6]




del L[2:4]    # üçüncüden dördüncüye kadar olan elemanlarý siler
L
|
[1,3,6]



del L[:]      # bütün elemanlarý siler, ama L listesini silmez.
L
|
[]



del L         # L listesini siler
L
|
ERROR



s = "merhaba"
list(s)  # dizeyi listeye çevirir.
|
['m', 'e', 'r', 'h', 'a', 'b', 'a']




t = (1,2,3,4)
list(t)  # çokuzu listeye çevirir.
|
[1,2,3,4]



s = "merhaba"
tuple(s)
|
('m', 'e', 'r', 'h', 'a', 'b', 'a')



L = [1,2,3,4]
tuple(L)
|
(1,2,3,4)




L = ['m', 'e', 'r', 'h', 'a', 'b', 'a']
"".join(L)
|
'merhaba'



L = ['m', 'e', 'r', 'h', 'a', 'b', 'a']
"-*-".join(L)
|
'm-*-e-*-r-*-h-*-a-*-b-*-a'



s = ""
for ls in L:
    s = s + ls
s
|
'merhaba'



ALL
Bir sýralý nesne içindeki bütün elemanlar mantýksal doðruya denkse True verir, yoksa False verir. Python’da sýfýr, boþ liste [], boþ dize "" gibi yapýlarýn da False sayýldýðýný; sýfýr olmayan sayýlarýn ve boþ olmayan nesnelerin de True sayýldýðýný hatýrlayýn.

all( [1, 2, 3, 4] )
|
True

all( (0, 1, 2, 3) )
|
False


ANY
Bir liste içinde en az bir eleman mantýksal doðruya denkse True verir, yoksa False verir. Python’da sýfýr, boþ liste [], boþ dize "" gibi yapýlarýn da False sayýldýðýný; sýfýr olmayan sayýlarýn ve boþ olmayan nesnelerin de True sayýldýðýný hatýrlayýn.

any( [0, '', True] )
|
True

any( [0, '', False] )
|
False






for i,c in enumerate("abcçdefgð"):
    print(i,c)
|
0 a
1 b
2 c
3 ç
4 d
5 e
6 f
7 g
8 ð






isimler = ["Kaan","Meral","Ziya","Fýndýk"]
for i, isim in enumerate( isimler ):
    if "Z" in isim:
        print(i,isim)
|
2 Ziya





isimler = ["Kaan","Meral","Ziya","Fýndýk"]
i = 0
while i < len(isimler):
    if "Z" in isimler[i]:
        print(i,isimler[i])
    i += 1
|
2 Ziya




L = [-1,-3, 4, -5, 2]
max(L, key=abs)
|
-5




sorted([1, 3, -1, 4, -3, 6, 4], reverse=True)      # ters sýralama
|
[6, 4, 4, 3, 1, -1, -3]




sorted( [(1,2), (0,2), (3,4), (2,-1)] , key=sum)  # çokuz elemanlarýn toplamýna göre sýralar
|
[(2, -1), (0, 2), (1, 2), (3, 4)]





sorted(("Ahmet","Þebnem","Mehmet","Ziya","Ýsmail","Ümit"))
|
['Ahmet', 'Mehmet', 'Ziya', 'Ümit', 'Ýsmail', 'Þebnem']

Türkçe alfabeye göre sýralama yapmak için yerellik ayarý yapmalýyýz. Bunun için locale modülünü yüklemeli, ardýndan da sorted fonksiyonuna key parametresi olarak locale.strxfrm fonksiyonunu vermeliyiz.

import locale
locale.setlocale(locale.LC_ALL, ("tr", 'UTF-8'))
sorted(("Ahmet","Þebnem","Mehmet","Ziya","Ýsmail","Ümit"), key=locale.strxfrm)
|
['Ahmet', 'Ýsmail', 'Mehmet', 'Þebnem', 'Ümit', 'Ziya']




sum(range(1,101))
|
5050






zip
Ayný uzunlukta iki veya daha çok listenin ayný konumdaki elemanlarýný sýrayla alýr, bu elemanlardan çokuzlar oluþturur ve bu çokuzlarýn listesini verir.

L1 = [4, 5, 9]
L2 = ['a', 'b', 'c']
list(zip(L1, L2))
|
[(4, 'a'), (5, 'b'), (9, 'c')]


yaþlar = [19, 25, 32, 27]
boylar = [170, 180, 175, 169]
aðýrlýk = [75, 78, 81, 71]
for y, b, a in zip(yaþlar, boylar, aðýrlýk):
    print("Yaþ:", y, "Boy:", b, "Aðýrlýk:",a)
|
Yaþ: 19 Boy: 170 Aðýrlýk: 75
Yaþ: 25 Boy: 180 Aðýrlýk: 78
Yaþ: 32 Boy: 175 Aðýrlýk: 81
Yaþ: 27 Boy: 169 Aðýrlýk: 71


